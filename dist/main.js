!function(){"use strict";function t(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function n(n){for(var r=1;r<arguments.length;r++){var o=null!=arguments[r]?arguments[r]:{};r%2?t(Object(o),!0).forEach((function(t){e(n,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(o,t))}))}return n}function e(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}function o(t,n,e){var r=[];if("x"===e)for(var o=t[0],i=t[1],c=0;c<n;c++)r.push([o,+i+c]);else if("y"===e)for(var a=t[0],u=t[1],s=0;s<n;s++)r.push([+a+s,u]);return r}var i=function(t,e,i){var c,a={positions:{},createPos:t,len:e},u=function(t,n){var e="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!e){if(Array.isArray(t)||(e=function(t,n){if(t){if("string"==typeof t)return r(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(t,n):void 0}}(t))||n&&t&&"number"==typeof t.length){e&&(t=e);var o=0,i=function(){};return{s:i,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var c,a=!0,u=!1;return{s:function(){e=e.call(t)},n:function(){var t=e.next();return a=t.done,t},e:function(t){u=!0,c=t},f:function(){try{a||null==e.return||e.return()}finally{if(u)throw c}}}}(o(t,e,i));try{for(u.s();!(c=u.n()).done;){var s=c.value;a.positions[String(s)]="good"}}catch(t){u.e(t)}finally{u.f()}return n(n(n(n(n({},function(t){return{getPositions:function(){return t.positions}}}(a)),function(t){return{isSunk:function(){return Object.values(t.positions).every((function(t){return"hit"===t}))}}}(a)),function(t){return{hit:function(n){t.positions[String(n)]="hit"}}}(a)),function(t){return{getLen:function(){return t.len}}}(a)),function(t){return{getCreatePos:function(){return t.createPos}}}(a))};function c(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?c(Object(e),!0).forEach((function(n){u(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function u(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function s(t,n){var e="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!e){if(Array.isArray(t)||(e=function(t,n){if(t){if("string"==typeof t)return f(t,n);var e=Object.prototype.toString.call(t).slice(8,-1);return"Object"===e&&t.constructor&&(e=t.constructor.name),"Map"===e||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?f(t,n):void 0}}(t))||n&&t&&"number"==typeof t.length){e&&(t=e);var r=0,o=function(){};return{s:o,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,c=!0,a=!1;return{s:function(){e=e.call(t)},n:function(){var t=e.next();return c=t.done,t},e:function(t){a=!0,i=t},f:function(){try{c||null==e.return||e.return()}finally{if(a)throw i}}}}function f(t,n){(null==n||n>t.length)&&(n=t.length);for(var e=0,r=new Array(n);e<n;e++)r[e]=t[e];return r}function l(t,n,e){n.forEach((function(n){t.positions[String(n)]=e}))}function p(t){return Object.keys(t.getPositions())}function h(t,n){var e=p(n),r=[];return e.forEach((function(n){for(var e=n.split(","),o=-1;o<2;o+=1)for(var i=-1;i<2;i+=1){var c=String([+e[0]+o,+e[1]+i]);"empty"!==t.positions[c]&&"unavailable"!==t.positions[c]||r.includes(c)||r.push(c)}})),r}function v(t,n,e,r){var o=i(n,e,r);return function(t,n){l(t,p(n),"ship")}(t,o),function(t,n){l(t,h(t,n),"unavailable")}(t,o),function(t,n){t.ships.push(n)}(t,o),o}function b(t,n){!function(t,n){l(t,p(n),"empty")}(t,n),function(t,n){l(t,h(t,n),"empty")}(t,n),function(t,n){var e=t.ships.indexOf(n);t.ships.splice(e,1)}(t,n)}function g(t,n){var e,r=s(t);try{for(r.s();!(e=r.n()).done;){var o=e.value;if(Object.keys(o.getPositions()).includes(String(n)))return o}}catch(t){r.e(t)}finally{r.f()}}function y(t,n){return"ship"===t.positions[String(n)]}var d=function(t){for(var n={positions:{},ships:[],gameBoardLen:t,missedShots:[],hitShots:[],unavailableShots:[]},e=0;e<t;e++)for(var r=0;r<t;r++)n.positions[String([e,r])]="empty";return a(a(a(a(a(a(a(a(a(a(a({},function(t){return{getPositions:function(){return t.positions}}}(n)),function(t){return{getShips:function(){return t.ships}}}(n)),function(t){return{createShip:function(n,e,r){return v(t,n,e,r)}}}(n)),function(t){return{removeShip:function(n){b(t,n)}}}(n)),function(t){return{changeShipAxis:function(n,e){return function(t,n,e){return b(t,n),v(t,n.getCreatePos(),n.getLen(),e)}(t,n,e)}}}(n)),function(t){return{checkPlacement:function(n,e,r){return function(t,n,e,r){var i,c=s(o(n,e,r));try{for(c.s();!(i=c.n()).done;){var a=i.value;if("empty"!==t.positions[String(a)])return!1}}catch(t){c.e(t)}finally{c.f()}return!0}(t,n,e,r)}}}(n)),function(t){return{receiveAttack:function(n){return function(t,n){if(y(t,n)){t.hitShots.push(String(n));var e=g(t.ships,n);e.hit(n),e.isSunk()&&function(t,n){h(t,n).forEach((function(n){t.missedShots.includes(n)||t.unavailableShots.includes(n)||t.unavailableShots.push(n)}))}(t,e)}else t.missedShots.push(String(n))}(t,n)}}}(n)),function(t){return{getAttacks:function(){return{missedShots:t.missedShots,hitShots:t.hitShots,unavailableShots:t.unavailableShots}}}}(n)),function(t){return{isGameOver:function(){return function(t){var n=!0;return t.ships.forEach((function(t){t.isSunk()||(n=!1)})),n}(t)}}}(n)),function(t){return{checkAttack:function(n){return y(t,n)}}}(n)),function(t){return{getPositionsAroundShip:function(n){return h(t,n)}}}(n))};function m(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function S(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?m(Object(e),!0).forEach((function(n){O(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):m(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function O(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var j=10;function P(t){for(var n=0;n<j;n++)for(var e=0;e<j;e++)t.availableShots.push(String([n,e]))}var w,A=function(t){return{getGameBoard:function(){return t.gameBoard}}},k=function(t){return{getGameBoardLen:function(){return t.gameBoardLen}}},E=function(t){return{getAvailableShots:function(){return t.availableShots}}},L=function(t){return{attack:function(n,e){return function(t,n,e){var r=t.availableShots.indexOf(String(e));n.receiveAttack(e),t.availableShots.splice(r,1)}(t,n,e)}}};function B(t,n,e,r,i){t.getGameBoard().createShip(e,r,i),function(t,n){t.forEach((function(t){var e=".p-".concat(String(t).replace(",","-"));n.querySelector(e).classList.add("ship")}))}(o(e,r,i),n)}function D(t,n,e,r,o){if(e.attack(t,r),t.checkAttack(r)){o.textContent="X";var i=g(t.getShips(),r);i.isSunk()&&t.getPositionsAroundShip(i).forEach((function(t){var e=".p-".concat(String(t).replace(",","-")),r=n.querySelector(e);r.textContent="O",r.classList.remove("selectable")}))}else o.textContent="O"}var x,C=function(){var t={gameBoard:d(j),gameBoardLen:j,availableShots:[]};return P(t),S(S(S(S({},A(t)),k(t)),E(t)),L(t))}(),G=(P(x={gameBoard:d(j),gameBoardLen:j,availableShots:[]}),S(S(S(S(S({},A(x)),k(x)),E(x)),L(x)),function(t){return{getAttackPosition:function(){return function(t){var n=t.availableShots.length,e=Math.floor(Math.random()*n);return t.availableShots[e]}(t)}}}(x))),I=document.querySelector(".game-board.human"),q=document.querySelector(".game-board.ai"),M=G.getGameBoard(),T=C.getGameBoard();!function(t,n){for(var e=0;e<10;e++)for(var r=0;r<10;r++){var o=document.createElement("div");o.classList.add("position","p-".concat(e,"-").concat(r)),t.appendChild(o)}}(I),function(t,n,e,r,o,i,c){for(var a=function(a){for(var u=function(c){var u=document.createElement("div");u.classList.add("position","p-".concat(a,"-").concat(c),"selectable"),e.appendChild(u),w=function(){n.getAttacks().unavailableShots.includes(String([a,c]))||(D(n,e,r,[a,c],u),n.isGameOver()?console.log("player won"):(function(t,n,e){var r=e.getAttackPosition(),o=".p-".concat(String(r).replace(",","-")),i=n.querySelector(o);D(t,n,e,r,i)}(o,i,t),o.isGameOver()?console.log("ai won"):u.classList.remove("selectable")))},u.addEventListener("click",w,{once:!0,capture:!1})},s=0;s<c;s++)u(s)},u=0;u<c;u++)a(u)}(G,M,q,C,T,I,j),B(C,I,[1,1],1,"x"),B(G,q,[1,1],2,"x"),B(G,q,[5,5],4,"y")}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,