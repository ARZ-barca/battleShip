/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/attack.js":
/*!***********************!*\
  !*** ./src/attack.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _setup_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup-dom */ \"./src/setup-dom.js\");\n // event for when player attacks ai board\n\nfunction attack(attacker, target, position, element, targetBoardDiv) {\n  attacker.attack(target, position); // to check if attack hit or miss\n\n  var hitShip = target.gameBoard.getHitShip(position);\n\n  if (hitShip) {\n    // attack was a hit\n    element.classList.add(\"hit\");\n\n    if (hitShip.isSunk()) {\n      (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(hitShip, targetBoardDiv, \"sunk\");\n    }\n  } else {\n    // attack was a miss\n    element.classList.add(\"miss\");\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (attack);\n\n//# sourceURL=webpack://battleship/./src/attack.js?");

/***/ }),

/***/ "./src/gameBoard.js":
/*!**************************!*\
  !*** ./src/gameBoard.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRandomAxis\": function() { return /* binding */ getRandomAxis; }\n/* harmony export */ });\n/* harmony import */ var _ships__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ships */ \"./src/ships.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n // returns a random axis : 'x' or 'y'\n\nfunction getRandomAxis() {\n  return Math.floor(Math.random() * 100) % 2 === 0 ? \"x\" : \"y\";\n} // change the given positions in the game boards\n\n\nfunction changeGameBoardPositions(state, positions, value) {\n  positions.forEach(function (p) {\n    state.positions[String(p)] = value;\n  });\n} // get positions arround ship\n\n\nfunction _getPositionsAroundShip(state, ship) {\n  var shipPositions = Object.keys(ship.positions);\n  var aroundPositions = [];\n  shipPositions.forEach(function (p) {\n    var pAsList = p.split(\",\");\n\n    for (var i = -1; i < 2; i += 1) {\n      for (var j = -1; j < 2; j += 1) {\n        var newPos = String([+pAsList[0] + i, +pAsList[1] + j]);\n\n        if ((state.positions[newPos] === \"empty\" || state.positions[newPos] === \"unavailable\") && !aroundPositions.includes(newPos)) {\n          aroundPositions.push(newPos);\n        }\n      }\n    }\n  });\n  return aroundPositions;\n} // adds get positions around ship method to object\n\n\nvar addGetPositionsAroundShip = function addGetPositionsAroundShip(state) {\n  return {\n    getPositionsAroundShip: function getPositionsAroundShip(ship) {\n      return _getPositionsAroundShip(state, ship);\n    }\n  };\n}; // method for placing ships in gameboard (returns the ship)\n\n\nfunction _createShip(state, createPos, len, axis) {\n  var ship = (0,_ships__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(createPos, len, axis); // change ship's positions\n\n  var shipPositions = Object.keys(ship.positions);\n  changeGameBoardPositions(state, shipPositions, \"ship\"); // change positions arround the ship\n\n  var aroundPositions = _getPositionsAroundShip(state, ship);\n\n  changeGameBoardPositions(state, aroundPositions, \"unavailable\"); // adding ship to the game board ships\n\n  state.ships.push(ship);\n  return ship;\n} // adds the createShip method to object\n\n\nvar addCreateShip = function addCreateShip(state) {\n  return {\n    createShip: function createShip(createPos, len, axis) {\n      return _createShip(state, createPos, len, axis);\n    }\n  };\n}; // method for removing the ship (needs one arg)\n\n\nfunction _removeShip(state, ship) {\n  // remove ship from the game board ships\n  var shipIndex = state.ships.indexOf(ship);\n  state.ships.splice(shipIndex, 1); // change positions arround the ship\n\n  var aroundPositions = _getPositionsAroundShip(state, ship); // don't remove if its arround another ship\n\n\n  var onlyAroundPosition = aroundPositions.filter(function (p) {\n    var onlyAroundP = true;\n    state.ships.forEach(function (ship) {\n      if (_getPositionsAroundShip(state, ship).includes(String(p))) {\n        onlyAroundP = false;\n      }\n    });\n    return onlyAroundP;\n  });\n  changeGameBoardPositions(state, onlyAroundPosition, \"empty\"); // change ship's positions\n\n  var shipPositions = Object.keys(ship.positions);\n  changeGameBoardPositions(state, shipPositions, \"empty\");\n} // adds removeship method to an object\n\n\nvar addRemoveShip = function addRemoveShip(state) {\n  return {\n    removeShip: function removeShip(ship) {\n      _removeShip(state, ship);\n    }\n  };\n}; // method that checks for placement validity\n\n\nfunction _checkPlacement(state, createPos, len, axis) {\n  var predictedPositions = (0,_ships__WEBPACK_IMPORTED_MODULE_0__.predictShipPositions)(createPos, len, axis);\n\n  var _iterator = _createForOfIteratorHelper(predictedPositions),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n\n      if (state.positions[String(p)] !== \"empty\") {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n} // adds checkPlacement method to an object\n\n\nvar addCheckPlacement = function addCheckPlacement(state) {\n  return {\n    checkPlacement: function checkPlacement(createPos, len, axis) {\n      return _checkPlacement(state, createPos, len, axis);\n    }\n  };\n}; // returns the ship that got hit\n\n\nfunction _getHitShip(state, attackPosition) {\n  var _iterator2 = _createForOfIteratorHelper(state.ships),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var ship = _step2.value;\n\n      if (Object.keys(ship.positions).includes(String(attackPosition))) {\n        return ship;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n} // adds getHitShip method to an object\n\n\nvar addGetHitShip = function addGetHitShip(state) {\n  return {\n    getHitShip: function getHitShip(attackPosition) {\n      return _getHitShip(state, attackPosition);\n    }\n  };\n}; // method for receieveing an attack\n\n\nfunction _getHit(state, attackPosition) {\n  var ship = _getHitShip(state, attackPosition);\n\n  if (ship) {\n    // a ship got hit\n    ship.getHit(attackPosition);\n  }\n} // adds getHit method to an object\n\n\nvar addGetHit = function addGetHit(state) {\n  return {\n    getHit: function getHit(attackPosition) {\n      return _getHit(state, attackPosition);\n    }\n  };\n}; // method for checking if the game is over\n\n\nfunction _isGameOver(state) {\n  var gameOver = true;\n  state.ships.forEach(function (ship) {\n    if (!ship.isSunk()) {\n      gameOver = false;\n    }\n  });\n  return gameOver;\n} // add isGameOver to an object\n\n\nvar addisGameOver = function addisGameOver(state) {\n  return {\n    isGameOver: function isGameOver() {\n      return _isGameOver(state);\n    }\n  };\n}; // removes all of board's ships\n\n\nfunction _clear(state) {\n  var shipsNumber = state.ships.length;\n\n  for (var i = 0; i < shipsNumber; i++) {\n    _removeShip(state, state.ships[0]);\n  }\n}\n\nvar addClear = function addClear(state) {\n  return {\n    clear: function clear() {\n      _clear(state);\n    }\n  };\n}; // method returns a Ship with random create location and axis and given length\n\n\nfunction _getRandomShip(state, len) {\n  var allPositions = Object.keys(state.positions);\n\n  while (true) {\n    var randomPos = allPositions[Math.floor(allPositions.length * Math.random())];\n    var randomAxis = getRandomAxis();\n\n    if (_checkPlacement(state, randomPos, len, randomAxis)) {\n      return (0,_ships__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(randomPos, len, randomAxis);\n    }\n\n    var otherAxis = randomAxis === \"x\" ? \"y\" : \"x\";\n\n    if (_checkPlacement(state, randomPos, len, otherAxis)) {\n      return (0,_ships__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(randomPos, len, otherAxis);\n    }\n\n    allPositions.splice(allPositions.indexOf(randomPos), 1);\n\n    if (allPositions.length === 0) {\n      throw new Error(\"board is not big enough for this many ships\");\n    }\n  }\n}\n\nvar addGetRandomShip = function addGetRandomShip(state) {\n  return {\n    getRandomShip: function getRandomShip(len) {\n      return _getRandomShip(state, len);\n    }\n  };\n}; // method for randomizing the board with given arrays of lengths\n\n\nfunction _randomize(state, lengths) {\n  var _iterator3 = _createForOfIteratorHelper(lengths),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var len = _step3.value;\n\n      var ship = _getRandomShip(state, len);\n\n      _createShip(state, ship.createPos, ship.len, ship.axis);\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar addRandomize = function addRandomize(state) {\n  return {\n    randomize: function randomize(lengths) {\n      _randomize(state, lengths);\n    }\n  };\n}; // game board factory function\n\n\nfunction GameBoard(gameBoardLen) {\n  // positions in game board\n  var state = {\n    positions: {},\n    ships: [],\n    gameBoardLen: gameBoardLen\n  }; // populating the game board\n\n  for (var i = 0; i < gameBoardLen; i++) {\n    for (var j = 0; j < gameBoardLen; j++) {\n      state.positions[String([i, j])] = \"empty\";\n    }\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    get positions() {\n      return state.positions;\n    },\n\n    get ships() {\n      return state.ships;\n    }\n\n  }, addCreateShip(state)), addRemoveShip(state)), addCheckPlacement(state)), addGetHitShip(state)), addGetHit(state)), addisGameOver(state)), addClear(state)), addGetRandomShip(state)), addRandomize(state)), addGetPositionsAroundShip(state));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GameBoard);\n\n\n//# sourceURL=webpack://battleship/./src/gameBoard.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _setup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup */ \"./src/setup.js\");\n\nvar mainDiv = document.querySelector(\"main\");\n(0,_setup__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mainDiv);\n\n//# sourceURL=webpack://battleship/./src/index.js?");

/***/ }),

/***/ "./src/player.js":
/*!***********************!*\
  !*** ./src/player.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AiPlayer\": function() { return /* binding */ AiPlayer; },\n/* harmony export */   \"gameBoardLen\": function() { return /* binding */ gameBoardLen; }\n/* harmony export */ });\n/* harmony import */ var _gameBoard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gameBoard */ \"./src/gameBoard.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nvar gameBoardLen = 10; // so ai can intelligently attack\n\nvar nextAiAttacks = []; // attack method for a player to attack another player\n\nfunction _attack(state, targetPlayer, position) {\n  targetPlayer.gameBoard.getHit(position);\n} // get positions arround a give pos that ai hit so it can try to sink the ship\n\n\nfunction getAttackPosesForAi(availableShots, pos) {\n  var targets = [];\n  var posList = String(pos).split(\",\");\n\n  for (var _i = 0, _arr = [1, -1]; _i < _arr.length; _i++) {\n    var i = _arr[_i];\n\n    if (availableShots.indexOf(String([+posList[0] + i, posList[1]])) !== -1) {\n      targets.push(String([+posList[0] + i, posList[1]]));\n    }\n\n    if (availableShots.indexOf(String([+posList[0], +posList[1] + i])) !== -1) {\n      targets.push(String([+posList[0], +posList[1] + i]));\n    }\n  }\n\n  return targets;\n}\n\nfunction getImpossiblePositions(pos, gameBoard) {\n  var posList = String(pos).split(\",\");\n  var hitShip = gameBoard.getHitShip(pos);\n\n  if (hitShip.positions[String([+posList[0] + 1, posList[1]])] === \"hit\" || hitShip.positions[String([+posList[0] - 1, posList[1]])] === \"hit\") {\n    return [String([+posList[0], +posList[1] + 1]), String([+posList[0], +posList[1] - 1]), String([+posList[0] + 1, +posList[1] + 1]), String([+posList[0] + 1, +posList[1] - 1]), String([+posList[0] - 1, +posList[1] + 1]), String([+posList[0] - 1, +posList[1] - 1])];\n  }\n\n  if (hitShip.positions[String([+posList[0], +posList[1] + 1])] === \"hit\" || hitShip.positions[String([+posList[0], +posList[1] - 1])] === \"hit\") {\n    return [String([+posList[0] + 1, +posList[1]]), String([+posList[0] - 1, +posList[1]]), String([+posList[0] + 1, +posList[1]] + 1), String([+posList[0] - 1, +posList[1]] + 1), String([+posList[0] + 1, +posList[1]] - 1), String([+posList[0] - 1, +posList[1]] - 1)];\n  }\n}\n\nfunction aiAttack(state, targetPlayer, position) {\n  var positionIndex = state.availableShots.indexOf(String(position));\n\n  if (positionIndex !== -1) {\n    state.availableShots.splice(positionIndex, 1);\n  }\n\n  targetPlayer.gameBoard.getHit(position);\n  var ship = targetPlayer.gameBoard.getHitShip(position);\n\n  if (ship) {\n    // is was a hit\n    if (ship.isSunk()) {\n      // it hit a ship and ship sunk\n      // ai should attack a random pos next\n      nextAiAttacks = [];\n      var positions = targetPlayer.gameBoard.getPositionsAroundShip(ship);\n      positions.forEach(function (p) {\n        var positionIndex = state.availableShots.indexOf(String(p));\n\n        if (positionIndex !== -1) {\n          state.availableShots.splice(positionIndex, 1);\n        }\n      });\n    } else {\n      // it hit but ship didn't sink\n      nextAiAttacks = nextAiAttacks.concat(getAttackPosesForAi(state.availableShots, position)); // Geniues!!!\n\n      var imposiblePoses = getImpossiblePositions(position, targetPlayer.gameBoard);\n\n      if (imposiblePoses !== undefined) {\n        imposiblePoses.forEach(function (p) {\n          if (nextAiAttacks.indexOf(p) !== -1) {\n            nextAiAttacks.splice(nextAiAttacks.indexOf(p), 1);\n          }\n        });\n      }\n    }\n  }\n} // add attack method to an object\n\n\nvar addAttack = function addAttack(state) {\n  return {\n    attack: function attack(targetPlayer, position) {\n      return _attack(state, targetPlayer, position);\n    }\n  };\n};\n\nvar addAiAttack = function addAiAttack(state) {\n  return {\n    attack: function attack(targetPlayer, position) {\n      return aiAttack(state, targetPlayer, position);\n    }\n  };\n}; // choose a random element from array\n\n\nfunction randomElement(array) {\n  var len = array.length;\n  var i = Math.floor(Math.random() * len);\n  return array[i];\n} // method for ai to choose an attack position\n\n\nfunction _getAttackPosition(state) {\n  if (nextAiAttacks.length === 0) return randomElement(state.availableShots);\n  var target = nextAiAttacks[0];\n  nextAiAttacks.splice(0, 1);\n  return target;\n} // add getAttackPosition method to an object\n\n\nvar addGetAttackPosition = function addGetAttackPosition(state) {\n  return {\n    getAttackPosition: function getAttackPosition() {\n      return _getAttackPosition(state);\n    }\n  };\n}; // factory function for human Player\n\n\nfunction Player() {\n  var state = {\n    gameBoard: (0,_gameBoard__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(gameBoardLen),\n    gameBoardLen: gameBoardLen,\n    availableShots: []\n  }; // initialize the available shots\n\n  for (var i = 0; i < gameBoardLen; i++) {\n    for (var j = 0; j < gameBoardLen; j++) {\n      state.availableShots.push(String([i, j]));\n    }\n  }\n\n  return _objectSpread({\n    get state() {\n      return state;\n    },\n\n    get gameBoard() {\n      return state.gameBoard;\n    },\n\n    get gameBoardLen() {\n      return state.gameBoardLen;\n    },\n\n    get availableShots() {\n      return state.availableShots;\n    }\n\n  }, addAttack(state));\n} // factory function for ai Player\n\n\nfunction AiPlayer() {\n  var player = Player();\n  var state = player.state;\n  return _objectSpread(_objectSpread(_objectSpread({}, player), addGetAttackPosition(state)), addAiAttack(state));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n\n//# sourceURL=webpack://battleship/./src/player.js?");

/***/ }),

/***/ "./src/setup-dom.js":
/*!**************************!*\
  !*** ./src/setup-dom.js ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BoardDiv\": function() { return /* binding */ BoardDiv; },\n/* harmony export */   \"clearBoardDiv\": function() { return /* binding */ clearBoardDiv; },\n/* harmony export */   \"markShipOnBoard\": function() { return /* binding */ markShipOnBoard; },\n/* harmony export */   \"unmarkShipOnBoard\": function() { return /* binding */ unmarkShipOnBoard; }\n/* harmony export */ });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar len = _player__WEBPACK_IMPORTED_MODULE_0__.gameBoardLen; // returns a populated div we use as board for placing ship in\n\nfunction BoardDiv() {\n  var div = document.createElement(\"div\");\n\n  for (var i = 0; i < len; i++) {\n    for (var j = 0; j < len; j++) {\n      var positionDiv = document.createElement(\"div\");\n      positionDiv.setAttribute(\"data-row\", i);\n      positionDiv.setAttribute(\"data-column\", j);\n      div.appendChild(positionDiv);\n    }\n  }\n\n  div.classList.add(\"board\");\n  return div;\n} // add mark to ship position's class\n\n\nfunction markShipOnBoard(ship, boardDiv, mark) {\n  Object.keys(ship.positions).forEach(function (p) {\n    var position = p.split(\",\");\n    var selector = \"*[data-row=\\\"\".concat(position[0], \"\\\"][data-column=\\\"\").concat(position[1], \"\\\"]\");\n    var dom = boardDiv.querySelector(selector);\n    dom.classList.add(mark);\n  });\n} // removes a ship from board\n\n\nfunction unmarkShipOnBoard(ship, boardDiv, mark) {\n  Object.keys(ship.positions).forEach(function (p) {\n    var position = p.split(\",\");\n    var selector = \"*[data-row=\\\"\".concat(position[0], \"\\\"][data-column=\\\"\").concat(position[1], \"\\\"]\");\n    var dom = boardDiv.querySelector(selector);\n    dom.classList.remove(mark);\n  });\n}\n\nfunction clearBoardDiv(boardDiv) {\n  _toConsumableArray(boardDiv.children).forEach(function (element) {\n    element.className = \"\";\n  });\n}\n\n\n\n//# sourceURL=webpack://battleship/./src/setup-dom.js?");

/***/ }),

/***/ "./src/setup.js":
/*!**********************!*\
  !*** ./src/setup.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shipsLenghts\": function() { return /* binding */ shipsLenghts; }\n/* harmony export */ });\n/* harmony import */ var _setup_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup-dom */ \"./src/setup-dom.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player */ \"./src/player.js\");\n/* harmony import */ var _ship_placement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ship-placement */ \"./src/ship-placement.js\");\n/* harmony import */ var _attack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./attack */ \"./src/attack.js\");\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n // ships to be created lengths\n\nvar shipsLenghts = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1]; // initialize the setup\n\nfunction initializeSetup(mainDiv) {\n  var playerBoardDiv = (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.BoardDiv)(_player__WEBPACK_IMPORTED_MODULE_1__.gameBoardLen);\n  var player = (0,_player__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n  var boardDivContainer = document.createElement(\"div\");\n  boardDivContainer.classList.add(\"board-container\");\n  boardDivContainer.appendChild(playerBoardDiv);\n  var randomButton = document.createElement(\"button\");\n  randomButton.textContent = \"random\";\n  randomButton.classList.add(\"random\");\n  var startButton = document.createElement(\"button\");\n  startButton.textContent = \"start\";\n  startButton.classList.add(\"start\"); // container for buttons\n\n  var buttonContainer = document.createElement(\"div\");\n  buttonContainer.classList.add(\"button-container\");\n  buttonContainer.appendChild(randomButton);\n  buttonContainer.appendChild(startButton); // rules for ship selection\n  // select a ship by clicking on it\n  // change ship axis by clicking on it again\n  // move ship by clicking on empty spot\n  // you can't place ship next to each other\n\n  var rules = document.createElement(\"ol\");\n  rules.classList.add(\"rules\");\n  rules.innerHTML = \"\\n    <li>select a ship by clicking on it</li>\\n    <li>change ship axis by clicking on it again</li>\\n    <li>move ship by clicking on an empty spot</li>\\n    <li>you can't place ships next to each other</li>\\n  \";\n  mainDiv.appendChild(boardDivContainer);\n  mainDiv.appendChild(rules);\n  mainDiv.appendChild(buttonContainer); // populate game board and board div with random ships\n\n  player.gameBoard.randomize(shipsLenghts);\n  player.gameBoard.ships.forEach(function (ship) {\n    (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(ship, playerBoardDiv, \"ship\");\n  }); // player randomizes his board\n\n  randomButton.addEventListener(\"click\", function () {\n    (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.clearBoardDiv)(playerBoardDiv);\n    player.gameBoard.clear();\n    player.gameBoard.randomize(shipsLenghts);\n    player.gameBoard.ships.forEach(function (ship) {\n      (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(ship, playerBoardDiv, \"ship\");\n    });\n    (0,_ship_placement__WEBPACK_IMPORTED_MODULE_2__.removeSelectedShip)();\n  }); // when player tries to replace a ship\n\n  _toConsumableArray(playerBoardDiv.children).forEach(function (element) {\n    element.addEventListener(\"click\", function (e) {\n      return (0,_ship_placement__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e.target, player.gameBoard, playerBoardDiv);\n    });\n  });\n\n  startButton.addEventListener(\"click\", function () {\n    var aiPlayer = (0,_player__WEBPACK_IMPORTED_MODULE_1__.AiPlayer)();\n    var aiBoardDiv = (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.BoardDiv)(_player__WEBPACK_IMPORTED_MODULE_1__.gameBoardLen);\n    aiPlayer.gameBoard.randomize(shipsLenghts);\n    aiPlayer.gameBoard.ships.forEach(function (ship) {\n      (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(ship, aiBoardDiv, \"ship\");\n    });\n    mainDiv.innerHTML = \"\"; // if player selected a ship before starting the game\n    // create the ship because it was removed\n\n    var selectedShip = (0,_ship_placement__WEBPACK_IMPORTED_MODULE_2__.getSelectedShip)();\n\n    if (selectedShip) {\n      // a ship was selected before starting the game\n      (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, playerBoardDiv, \"selected\");\n      player.gameBoard.createShip(selectedShip.createPos, selectedShip.len, selectedShip.axis);\n    } // to ignore click events after the game started\n\n\n    playerBoardDiv.classList.add(\"player\"); // to hide ai ships\n\n    aiBoardDiv.classList.add(\"ai\");\n    boardDivContainer.appendChild(playerBoardDiv);\n    boardDivContainer.appendChild(aiBoardDiv);\n    mainDiv.appendChild(boardDivContainer); // guides for the game\n\n    var guidDiv = document.createElement(\"div\");\n    guidDiv.classList.add(\"guid-container\");\n    guidDiv.innerHTML = \"\\n        <div class=\\\"miss-guid guid\\\">miss</div>\\n        <div class=\\\"hit-guid guid\\\">hit</div>\\n        <div class=\\\"sunk-guid guid\\\">sunk</div>\\n    \";\n    mainDiv.appendChild(guidDiv); // when player attacks ai\n\n    _toConsumableArray(aiBoardDiv.children).forEach(function (element) {\n      element.addEventListener(\"click\", function (e) {\n        // player attack positioon\n        var attackPosition = [e.target.getAttribute(\"data-row\"), e.target.getAttribute(\"data-column\")];\n        (0,_attack__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(player, aiPlayer, attackPosition, e.target, aiBoardDiv);\n\n        if (aiPlayer.gameBoard.isGameOver()) {\n          // player won and game ends\n          playerBoardDiv.classList.add(\"over\");\n          aiBoardDiv.classList.add(\"over\");\n          gameOver(\"you\", mainDiv);\n        } else {\n          // game continues and ai atacks\n          // ai attack position\n          var aiAttackPosition = aiPlayer.getAttackPosition().split(\",\"); // player board element to mark\n\n          var selector = \"*[data-row=\\\"\".concat(aiAttackPosition[0], \"\\\"][data-column=\\\"\").concat(aiAttackPosition[1], \"\\\"]\");\n          var positionDiv = playerBoardDiv.querySelector(selector);\n          (0,_attack__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(aiPlayer, player, aiAttackPosition, positionDiv, playerBoardDiv);\n\n          if (player.gameBoard.isGameOver()) {\n            // ai won and game ends\n            playerBoardDiv.classList.add(\"over\");\n            aiBoardDiv.classList.add(\"over\");\n            gameOver(\"ai\", mainDiv);\n          }\n        }\n      });\n    });\n  });\n}\n\nfunction gameOver(winnerName, mainDiv) {\n  var gameOverDiv = document.createElement(\"div\");\n  gameOverDiv.classList.add(\"game-over\");\n  var winnerText = document.createElement(\"p\");\n  winnerText.textContent = \"\".concat(winnerName, \" won\");\n  winnerText.classList.add(\"winner-text\");\n  var playAgainButton = document.createElement(\"button\");\n  playAgainButton.textContent = \"Play Again\";\n  playAgainButton.classList.add(\"play-again\");\n  gameOverDiv.appendChild(winnerText);\n  gameOverDiv.appendChild(playAgainButton);\n  playAgainButton.addEventListener(\"click\", function () {\n    mainDiv.innerHTML = \"\";\n    initializeSetup(mainDiv);\n  });\n  mainDiv.appendChild(gameOverDiv);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (initializeSetup);\n\n\n//# sourceURL=webpack://battleship/./src/setup.js?");

/***/ }),

/***/ "./src/ship-placement.js":
/*!*******************************!*\
  !*** ./src/ship-placement.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSelectedShip\": function() { return /* binding */ getSelectedShip; },\n/* harmony export */   \"removeSelectedShip\": function() { return /* binding */ removeSelectedShip; }\n/* harmony export */ });\n/* harmony import */ var _setup_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup-dom */ \"./src/setup-dom.js\");\n\nvar shipMark = \"ship\";\nvar selectedMark = \"selected\";\nvar selectedShip;\n\nfunction removeSelectedShip() {\n  selectedShip = undefined;\n}\n\nfunction getSelectedShip() {\n  return selectedShip;\n}\n\nfunction selectEvent(element, gameBoard, boardDiv) {\n  var position = [element.getAttribute(\"data-row\"), element.getAttribute(\"data-column\")];\n\n  if (!selectedShip) {\n    // no ship was selected before\n    if (!element.className.includes(shipMark)) {\n      // clicked on empty position\n      return;\n    } // clicked on ship\n\n\n    selectedShip = gameBoard.getHitShip(position);\n    gameBoard.removeShip(selectedShip);\n    (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(selectedShip, boardDiv, selectedMark);\n    return;\n  } // a ship was selected before\n\n\n  if (element.className.includes(shipMark)) {\n    // clicked on a ship\n    if (Object.keys(selectedShip.positions).includes(String(position))) {\n      // clicked the same ship\n      var otherAxis = selectedShip.axis === \"x\" ? \"y\" : \"x\";\n\n      if (gameBoard.checkPlacement(selectedShip.createPos, selectedShip.len, otherAxis)) {\n        // ship's axis can be changed\n        (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, boardDiv, selectedMark);\n        (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, boardDiv, shipMark);\n        var ship = gameBoard.createShip(selectedShip.createPos, selectedShip.len, otherAxis);\n        (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(ship, boardDiv, shipMark);\n        removeSelectedShip();\n      } // ship axis can't be changed\n\n\n      return;\n    } // clicked another ship\n\n\n    (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, boardDiv, selectedMark);\n    gameBoard.createShip(selectedShip.createPos, selectedShip.len, selectedShip.axis);\n    selectedShip = gameBoard.getHitShip(position);\n    gameBoard.removeShip(selectedShip);\n    (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(selectedShip, boardDiv, selectedMark);\n    return;\n  } // clicked on empty positions\n\n\n  if (!gameBoard.checkPlacement(position, selectedShip.len, selectedShip.axis)) {\n    // can't place selected ship\n    return;\n  } // can place the ship there\n\n\n  (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, boardDiv, selectedMark);\n  (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.unmarkShipOnBoard)(selectedShip, boardDiv, shipMark);\n  var newShip = gameBoard.createShip(position, selectedShip.len, selectedShip.axis);\n  (0,_setup_dom__WEBPACK_IMPORTED_MODULE_0__.markShipOnBoard)(newShip, boardDiv, shipMark);\n  removeSelectedShip();\n} // export default boardActivate;\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (selectEvent);\n\n//# sourceURL=webpack://battleship/./src/ship-placement.js?");

/***/ }),

/***/ "./src/ships.js":
/*!**********************!*\
  !*** ./src/ships.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"predictShipPositions\": function() { return /* binding */ predictShipPositions; }\n/* harmony export */ });\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// method that marks a position as hit\nfunction addGetHit(state) {\n  return {\n    getHit: function getHit(position) {\n      state.positions[String(position)] = \"hit\";\n    }\n  };\n} // check if ship is sunk\n\n\nvar addIsSunk = function addIsSunk(state) {\n  return {\n    isSunk: function isSunk() {\n      return Object.values(state.positions).every(function (value) {\n        return value === \"hit\";\n      });\n    }\n  };\n}; // predicts ship positions if created to check for their validity\n\n\nfunction predictShipPositions(createPos, len, axis) {\n  var createPosList = String(createPos).split(\",\");\n  var positions = [];\n\n  if (axis === \"x\") {\n    for (var i = createPosList[0], j = createPosList[1], k = 0; k < len; k++) {\n      positions.push([+i, +j + k]);\n    }\n  } else if (axis === \"y\") {\n    for (var _i = createPosList[0], _j = createPosList[1], _k = 0; _k < len; _k++) {\n      positions.push([+_i + _k, +_j]);\n    }\n  }\n\n  return positions;\n} // gameboard factory function\n\n\nfunction Ship(createPos, len, axis) {\n  var state = {\n    positions: {},\n    createPos: createPos,\n    axis: axis,\n    len: len\n  }; // populating the positions of the ship\n\n  var predictedPositions = predictShipPositions(createPos, len, axis);\n\n  var _iterator = _createForOfIteratorHelper(predictedPositions),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n      state.positions[String(p)] = \"good\";\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return _objectSpread(_objectSpread({\n    get positions() {\n      return state.positions;\n    },\n\n    get len() {\n      return state.len;\n    },\n\n    get axis() {\n      return state.axis;\n    },\n\n    get createPos() {\n      return state.createPos;\n    }\n\n  }, addIsSunk(state)), addGetHit(state));\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Ship);\n\n\n//# sourceURL=webpack://battleship/./src/ships.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;