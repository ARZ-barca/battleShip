!function(){"use strict";function t(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function e(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function r(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function o(t,e,r){var n=String(t).split(","),o=[];if("x"===r)for(var i=n[0],a=n[1],c=0;c<e;c++)o.push([+i,+a+c]);else if("y"===r)for(var u=n[0],s=n[1],f=0;f<e;f++)o.push([+u+f,+s]);return o}var i=function(t,r,i){var a,c={positions:{},createPos:t,axis:i,len:r},u=function(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return n(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var o=0,i=function(){};return{s:i,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,c=!0,u=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return c=t.done,t},e:function(t){u=!0,a=t},f:function(){try{c||null==r.return||r.return()}finally{if(u)throw a}}}}(o(t,r,i));try{for(u.s();!(a=u.n()).done;){var s=a.value;c.positions[String(s)]="good"}}catch(t){u.e(t)}finally{u.f()}return e(e({get positions(){return c.positions},get len(){return c.len},get axis(){return c.axis},get createPos(){return c.createPos}},function(t){return{isSunk:function(){return Object.values(t.positions).every((function(t){return"hit"===t}))}}}(c)),function(t){return{getHit:function(e){t.positions[String(e)]="hit"}}}(c))};function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function c(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){u(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function u(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(t){if("string"==typeof t)return f(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?f(t,e):void 0}}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,c=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return a=t.done,t},e:function(t){c=!0,i=t},f:function(){try{a||null==r.return||r.return()}finally{if(c)throw i}}}}function f(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function l(t,e,r){e.forEach((function(e){t.positions[String(e)]=r}))}function d(t,e){var r=Object.keys(e.positions),n=[];return r.forEach((function(e){for(var r=e.split(","),o=-1;o<2;o+=1)for(var i=-1;i<2;i+=1){var a=String([+r[0]+o,+r[1]+i]);"empty"!==t.positions[a]&&"unavailable"!==t.positions[a]||n.includes(a)||n.push(a)}})),n}function p(t,e,r,n){var o=i(e,r,n);return l(t,Object.keys(o.positions),"ship"),l(t,d(t,o),"unavailable"),t.ships.push(o),o}function v(t,e){var r=t.ships.indexOf(e);t.ships.splice(r,1);var n=d(t,e).filter((function(e){var r=!0;return t.ships.forEach((function(n){d(t,n).includes(String(e))&&(r=!1)})),r}));l(t,n,"empty");var o=Object.keys(e.positions);l(t,o,"empty")}function h(t,e,r,n){var i,a=s(o(e,r,n));try{for(a.s();!(i=a.n()).done;){var c=i.value;if("empty"!==t.positions[String(c)])return!1}}catch(t){a.e(t)}finally{a.f()}return!0}function m(t,e){var r,n=s(t.ships);try{for(n.s();!(r=n.n()).done;){var o=r.value;if(Object.keys(o.positions).includes(String(e)))return o}}catch(t){n.e(t)}finally{n.f()}}function y(t,e){for(var r=Object.keys(t.positions);;){var n=r[Math.floor(r.length*Math.random())],o=Math.floor(100*Math.random())%2==0?"x":"y";if(h(t,n,e,o))return i(n,e,o);var a="x"===o?"y":"x";if(h(t,n,e,a))return i(n,e,a);if(r.splice(r.indexOf(n),1),0===r.length)throw new Error("board is not big enough for this many ships")}}var b=function(t){for(var e={positions:{},ships:[],gameBoardLen:t},r=0;r<t;r++)for(var n=0;n<t;n++)e.positions[String([r,n])]="empty";return c(c(c(c(c(c(c(c(c(c({get positions(){return e.positions},get ships(){return e.ships}},function(t){return{createShip:function(e,r,n){return p(t,e,r,n)}}}(e)),function(t){return{removeShip:function(e){v(t,e)}}}(e)),function(t){return{checkPlacement:function(e,r,n){return h(t,e,r,n)}}}(e)),function(t){return{getHitShip:function(e){return m(t,e)}}}(e)),function(t){return{getHit:function(e){return function(t,e){var r=m(t,e);r&&r.getHit(e)}(t,e)}}}(e)),function(t){return{isGameOver:function(){return function(t){var e=!0;return t.ships.forEach((function(t){t.isSunk()||(e=!1)})),e}(t)}}}(e)),function(t){return{clear:function(){!function(t){for(var e=t.ships.length,r=0;r<e;r++)v(t,t.ships[0])}(t)}}}(e)),function(t){return{getRandomShip:function(e){return y(t,e)}}}(e)),function(t){return{randomize:function(e){!function(t,e){var r,n=s(e);try{for(n.s();!(r=n.n()).done;){var o=y(t,r.value);p(t,o.createPos,o.len,o.axis)}}catch(t){n.e(t)}finally{n.f()}}(t,e)}}}(e)),function(t){return{getPositionsAroundShip:function(e){return d(t,e)}}}(e))};function g(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function O(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?g(Object(r),!0).forEach((function(e){S(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):g(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function S(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function j(){for(var t={gameBoard:b(10),gameBoardLen:10,availableShots:[]},e=0;e<10;e++)for(var r=0;r<10;r++)t.availableShots.push(String([e,r]));return O({get state(){return t},get gameBoard(){return t.gameBoard},get gameBoardLen(){return t.gameBoardLen},get availableShots(){return t.availableShots}},function(t){return{attack:function(e,r){return function(t,e,r){var n=t.availableShots.indexOf(String(r));-1!==n&&t.availableShots.splice(n,1),e.gameBoard.getHit(r);var o=e.gameBoard.getHitShip(r);o&&o.isSunk()&&e.gameBoard.getPositionsAroundShip(o).forEach((function(e){var r=t.availableShots.indexOf(String(e));-1!==r&&t.availableShots.splice(r,1)}))}(t,e,r)}}}(t))}function w(){var t=j(),e=t.state;return O(O({},t),function(t){return{getAttackPosition:function(){return function(t){return e=t.availableShots,r=e.length,e[Math.floor(Math.random()*r)];var e,r}(t)}}}(e))}var P=j;function E(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function A(){for(var t=document.createElement("div"),e=0;e<10;e++)for(var r=0;r<10;r++){var n=document.createElement("div");n.setAttribute("data-row",e),n.setAttribute("data-column",r),t.appendChild(n)}return t.classList.add("board"),t}function L(t,e,r){Object.keys(t.positions).forEach((function(t){var n=t.split(","),o='*[data-row="'.concat(n[0],'"][data-column="').concat(n[1],'"]');e.querySelector(o).classList.add(r)}))}function k(t,e,r){Object.keys(t.positions).forEach((function(t){var n=t.split(","),o='*[data-row="'.concat(n[0],'"][data-column="').concat(n[1],'"]');e.querySelector(o).classList.remove(r)}))}var x,B="ship",C="selected";function D(){x=void 0}function I(){return x}var M=function(t,e,r,n){t.attack(e,r),e.gameBoard.getHitShip(r)?n.classList.add("hit"):n.classList.add("miss")};function H(t){return function(t){if(Array.isArray(t))return T(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return T(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?T(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}var q=[4,3,3,2,2,2,1,1,1,1];function z(t){var e=A(),r=P(),n=document.createElement("div");n.classList.add("board-container"),n.appendChild(e);var o=document.createElement("button");o.textContent="random",o.classList.add("random");var i=document.createElement("button");i.textContent="start",i.classList.add("start");var a=document.createElement("div");a.classList.add("button-container"),a.appendChild(o),a.appendChild(i),t.appendChild(n),t.appendChild(a),r.gameBoard.randomize(q),r.gameBoard.ships.forEach((function(t){L(t,e,"ship")})),o.addEventListener("click",(function(){var t;(t=e.children,function(t){if(Array.isArray(t))return E(t)}(t)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return E(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?E(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).forEach((function(t){t.className=""})),r.gameBoard.clear(),r.gameBoard.randomize(q),r.gameBoard.ships.forEach((function(t){L(t,e,"ship")})),D()})),H(e.children).forEach((function(t){t.addEventListener("click",(function(t){return function(t,e,r){var n=[t.getAttribute("data-row"),t.getAttribute("data-column")];if(!x){if(!t.className.includes(B))return;return x=e.getHitShip(n),e.removeShip(x),void L(x,r,C)}if(t.className.includes(B)){if(Object.keys(x.positions).includes(String(n))){var o="x"===x.axis?"y":"x";return void(e.checkPlacement(x.createPos,x.len,o)&&(k(x,r,C),k(x,r,B),L(e.createShip(x.createPos,x.len,o),r,B),D()))}return k(x,r,C),e.createShip(x.createPos,x.len,x.axis),x=e.getHitShip(n),e.removeShip(x),void L(x,r,C)}e.checkPlacement(n,x.len,x.axis)&&(k(x,r,C),k(x,r,B),L(e.createShip(n,x.len,x.axis),r,B),D())}(t.target,r.gameBoard,e)}))})),i.addEventListener("click",(function(){var o=w(),i=A();o.gameBoard.randomize(q),o.gameBoard.ships.forEach((function(t){L(t,i,"ship")})),t.innerHTML="";var a=I();a&&(k(a,e,"selected"),r.gameBoard.createShip(a.createPos,a.len,a.axis)),e.classList.add("player"),i.classList.add("ai"),n.appendChild(e),n.appendChild(i),t.appendChild(n),H(i.children).forEach((function(n){n.addEventListener("click",(function(n){var a=[n.target.getAttribute("data-row"),n.target.getAttribute("data-column")];if(M(r,o,a,n.target),o.gameBoard.isGameOver())e.classList.add("over"),i.classList.add("over"),U("you",t);else{var c=o.getAttackPosition().split(","),u='*[data-row="'.concat(c[0],'"][data-column="').concat(c[1],'"]'),s=e.querySelector(u);M(o,r,c,s),r.gameBoard.isGameOver()&&(e.classList.add("over"),i.classList.add("over"),U("ai",t))}}))}))}))}function U(t,e){var r=document.createElement("div");r.classList.add("game-over");var n=document.createElement("p");n.textContent="".concat(t," won"),n.classList.add("winner-text");var o=document.createElement("button");o.textContent="Play Again",o.classList.add("play-again"),r.appendChild(n),r.appendChild(o),o.addEventListener("click",(function(){e.innerHTML="",z(e)})),e.appendChild(r)}z(document.querySelector("main"))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,